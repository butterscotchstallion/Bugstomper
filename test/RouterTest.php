<?php/* * RouterTest - test functionality of the URI router * */class RouterTest extends PHPUnit_Framework_TestCase{		protected $backupGlobals = FALSE;		public function testGetRouteComponentsWithMalformedRoute()	{		$request  = 'POST http://te///st.com/3w45357247fdgsdf////';				$expected = false;				$this->objRouter			 ->expects($this->any())			 ->method('GetRouteComponents')			 ->with($request)			 ->will($this->returnValue($expected));				$actual = $this->objRouter->GetRouteComponents($request);				$this->assertEquals($expected, $actual);	}		public function testGetRouteComponentsWithNonMatchingRoute()	{		$request  = 'POST http://test.com/butts';				$expected = false;				$this->objRouter			 ->expects($this->any())			 ->method('GetRouteComponents')			 ->with($request)			 ->will($this->returnValue($expected));				$actual = $this->objRouter->GetRouteComponents($request);				$this->assertEquals($expected, $actual);	}		public function testGetRouteComponents()	{		$request  = 'POST http://test.com/page/update/1';				$expected = array('method'     => 'POST',						  'controller' => 'page',						  'action' 	   => 'update',						  'id'		   => 1);				$this->objRouter			 ->expects($this->any())			 ->method('GetRouteComponents')			 ->with($request)			 ->will($this->returnValue($expected));				$actual = $this->objRouter->GetRouteComponents($request);				$this->assertSame($expected, $actual);	}	public function setUp()	{		$this->objRouter = $this->getMock('Router', array('GetRouteComponents'));	}}	